소프트웨어 개발 방법론

1) 구조적 방법론
정형화된 분석 절차
분석 -> 설계 -> 구현 -> 테스트 -> 유지보수

2) 정보공학 방법론
정보 시스템 개발
대규모 정보 시스템 구축 적합

3) 객체지향 방법론
기본 원칙 : 캡슐화, 상속성, 다형성, 추상화, 정보 은닉

4) 컴포넌트 기반(CBD; Component Based Design) 방법론
컴포넌트 조합
컴포넌트 및 소프트웨어의 재사용 가능
확장성
생산성 향상

5) 애자일(Agile) 방법론
유연하게 대응, 일정 주기 반복

6) 제품 계열 방법론
특정 제품
- 영역 공학 : 영역 분석, 설계, 핵심 자산 구현
- 응용 공학 : 제품 요구 분석, 설계, 구현



비용 산정 기법
1) 소프트웨어 비용 산정의 개요
필요 비용 산정
ex) 하향식, 상향식

2) 소프트웨어 비용 결정 요소
- 프로젝트 요소
제품 복잡도 : 문제점들의 난이도 의미
시스템 크기 : 시스템 크기 의미
요구되는 신뢰도 : 필요한 기능을 수행하는 정도

- 자원 요소
인정 자원 : 관련자들이 갖춘 능력 혹은 자질을 의미
하드웨어 자원 : 보조 장비를 의미
소프트웨어 자원 : 개발 지원 도구 의미

- 생산성 요소
개발자 능력
개발 기간




하향식 비용 산정 기법
1) 개요
비 과학적, 경험에 의존

2) 전문가 감정 기법
두 명 이상의 전문가에게 비용 산정 의뢰
과거 프로젝트와의 다른 점 간과 과능
개인적이고 주관적
경험이 부족할 수 있음

3) 델파이 기법
전문가 감정 기법의 주관적 편견을 보완
한명의 조정자 + 다수의 전문가



상향식 비용 산정 기법
1) 개요
세부 작업 단위 별로 비용 산정 -> 전체 비용 산정

2) LOC(source Line Of Code)
비관치, 낙관치, 기대치 측정 -> 예측치 -> 비용산정

3) Effort Per Task(개발 단계별 인원수) 기법
LOC 보완
노력을 생명주기의 각 단계별로 산정(LOC 보다 정확)

4) COCOMO(Constructive Cost Model)
소프트웨어 개발비 견적에 널리 통용
Boehm
성격에 따라 비용 다르게 산정
결과는 노력(Man-Month)으로 나타냄

- 유형
조직형(Organic) : 중, 소규모 소프트웨어 (5만 라인 이하)
반분리형(Semi-Detached) : (30만 라인 이하)
내장형(Embedded) : 최대형 규모(30만 라인 이상)

- 종류
기본형(Basic) : 소프트웨어의 크기와 개발 유형만을 이용
중간형(Intermediate) : 제품, 컴퓨터, 개발요원, 프로젝트 특성의 15가지 요인
발전형(Detailed) : 보다 자세하고 정확하게 노력 산출 -> 소프트웨어 환경과 구성 요소가 사전에 정의, 개발 과정의 후반부에 주로 적용

5) Putnam 모형
노력의 분포
생명 주기 예측 모형
Rayleigh-Norden 곡선의 노력 분포도 기반
대형 프로젝트
기간이 늘수록 인원의 노력 감소
-> SLIM : Rayleigh-Norden 곡선과 Putnam 예측 모형을 기초로 개발된 자동화 추정 도구

6) FP(기능점수) : Function Point
요인별 가중치를 합산
총 기능점수와 영향도 이용 -> 비용 산정
-> ESTIMACS : 자동화 추정 도구

7) 기능점수 모형에서 비용 산정에 이용되는 요소
자료 입력(입력 양식)
정보 출력(출력 보고서)
명령어(사용자 질의수)
데이터 파일
필요한 외부루틴과의 인터페이스

8) 프로젝트 관리
- 관리 유형
일정 관리
비용 관리
인력 관리
위험 관리
품질 관리




소프트웨어 개발 표준
1) ISO/IEC 12207
ISO(International Organization for Standardization, 국제표준화기구) 개발
표준 소프트웨어 생명 주기 프로세스

2) CMMI(Capability Maturity Model Integration, 능력 성숙도 통합 모델)
-- 프로세스 성숙도 5 단계
- 초기(Initial)
프로세스 : 없음
특징 : 작업자 능력에 따라 성공여부 결정

- 관리(Managed)
프로세스 : 규칙화된
특징 : 특정한 프로세스 내의 프로세스 정의 및 수행

- 정의(Defined)
프로세스 : 표준화된
특징 : 조직의 표준 프로세스를 활용하여 업무 수행

- 정략적 관리(Quantitatively Managed)
프로세스 : 예측 가능한
특징 : 프로세스를 정량적으로 관리 및 통제

- 최적화(Optimizing)
프로세스 : 지속적 개선
특징 : 프로세스 역량 향상을 위해 지속적인 프로세스 개선

3) SPICE(Software Process Improvement and Capability dEtermination)
소프트웨어 프로세스 평가 및 개선하는 국제 표준
ISO/IEC 15504

- SPICE 목적
프로세스 개선을 위해 개발 기관이 스스로 평가
기관에서 지정한 요구조건의 만족여부를 개발 조직이 스스로 평가
계약 체결을 위해 수탁 기관의 프로세스 평가

- 5개 프로세스 범주
고객 - 공급자(Customer-Supplier), 공학(Engineering), 지원(Support), 관리(Management), 조직(Organzation)

- 프로세스 수행 능력 단계
불완전(Incomplete) : 프로세스가 구현 X 'OR' 목적달성 X
수행(Performed) : 프로세스가 수행 O 'AND' 목적달성 O
관리(Managed) : 정의된 자원의 '한도 내'에서 작업 산출물 인도
확립(Established) : 'SW 공학 원칙'에 기반 프로세스 수행
예측(Predictable) : 목적 달성을 위해 '통제' + '양적인 측정'을 통해 일관되게 수행
최적화(Optimizing) : 최적화 + 지속적인 개선 -> 업무 목적 만족



테일러링, 프레임워크
1) 소프트웨어 개발 방법론 테일러링 개요
방법론의 절차, 사용기법 수정 보완
- 프로젝트 특징 정의 -> 표준 프로세스 선정 및 검증 -> 상위 수준의 커스터마이징 -> 세부 커스터마이징 -> 문서화

2) 테일러링 고려사항
내부적 : 목표 환경, 요구사항, 규모, 보유 기술
외부적 : 법적 제약, 국제표준

3) Spring Framework
Java 플랫폼
전자정부 표준 프레임워크의 기반 기술
동적 웹 사이트 개발 도구

4) 전자정부 프레임워크
대한민국 공공부문 정보화 사업 시

5) 닷넷 프레임워크 (.NET Framework)
MS개발 windows 프로그램 개발 및 실행환경 제공
공통 언어 런타임(CLR; Common Language Runtime : 가상머신)에서 작동




네트워크 구축
1) 버스형(Bus)
한 개의 통신 회선 -> 여러 대의 단말장치 연결 == LAN에서 사용
물리적 구조 간단
단말장치 추가, 제거 용이
신뢰성 높음
기밀보장 어려움
회선 길이 제한

2) 계층형(Tree, 트리형, 분산형)
일정 지점까지는 하나의 회선
이웃 단말은 중앙 단말장치로부터 다시 연결 == 분산 처리 시스템

3) 링형(Ring, 환형, 루프형)
Point-to-Point == LAN에서 사용
분산 및 집중 제어 모두 가능
단말장치 추가/제거 어려움
기밀 보호 어려움
전송 지연 가능
단방향 링 : 하나가 고장나면 전체에 영향

4) 성형(Star, 중앙집중형)
중앙에 중앙 컴퓨터
중앙 집중식의 네트워크 구성
Point-to-Point
단말장치 추가, 제거 쉬움
중앙컴퓨터 고장나면 전체 정지

5) 망형(Mesh, 네트워크형)
많은 양의 통신을 필요로 하는 경우 유리
통신 회선의 총 경로가 '가장 긺'
'공중 데이터 통신망'에서 사용
장애 시, 다른 경로 이용 가능

6) 네트워크 분류

- 근거리 통신망(LAN; Local Area Network)
단거리
자원 공유 목적
전송 빠르고 에러 발생률 낮음
주로 버스형, 링형 사용

- 원거리 통신망(WAN; Wide Area Network)
장거리
통신 속도 느림, 에러 발생률 높음




스위치
1) 분류
- L2
2계층(Da)
일반적으로 스위치는 이것을 의미
MAC을 기반으로 Frame 전송
동일 네트워크 간의 연결만 가능

- L3 
3계층(Ne)
L2 + Router
IP 기반으로 Packet 전송
서로 다른 네트워크 연결 가능

- L4 
4계층(T)
Load Balancer 보유
사용자의 요구를 서버의 부하가 적은 곳에 배분 == Load Balancing

- L7 
7계층(A)
IP Address + TCP/UDP Port + Packet Contents => Load Balancing

2) 방식
- Store and Forwarding : 데이터를 모두 받은 후 스위칭
- Cut-through : 데이터의 목적지 주소만을 확인한 후 바로 스위칭
- Fragment Free : 위 두 개의 장점을 결합

3) Backbone Switch
모든 패킷이 지나가는 네트워크 중심에 배치
주로 L3가 백본 스위치의 역할을 함

4) Hierarchical 3 Layer Model
- Core Layer
== 백본 계층
Distribution 계층에서 오는 통신 집약 -> 인터넷에 연결
전자우편, 인터넷 접속, 화상 회의
백본 스위치 사용

- Distribution Layer
Access 계층의 통신을 집약해서 Core 계층으로 전송
LAN 간에 라우팅기능 수행
라우터 + L3스위치 -> IP, Packet

- Access Layer
네트워크 접속 시, 최초로 연결되는 지점
포트수는 사용자 수 만큼 필요
통신을 집약해서 Distribution 계층으로 전송
L2 사용 -> MAC, Frame




경로 제어, 트래픽 제어
1) Routing Protocol(경로제어 프로토콜)
- RIP(Roution Information Protocol)
== 거리 벡터 라우팅 프로토콜
IGP(Interior Gateway Protocol)
Using Bellman-Ford Algorithm
소규모 프로토콜
최대 홉 <= 15

- OSPF(Open Shortest Path First)
RIP의 단점 개선
daijkstra Algorithm and Link Static based
대규모 프로토콜

- BGP(Border Gateway Protocol)
EGP(Exterior Gateway Protocol)단점 보완
자치 시스템 간 라우팅 프로토콜
초기 라우터들 연결 시, 전체 경로를 나타내는 라우팅 테이블 교환 -> 이후에는 변화된 정보만 교환

2)  Traffic Control
패킷의 흐름 또는 양을 조절하는 기능
흐름제어, 폭주(혼합) 제어, 교착 상태 방지 기법

3) 흐름제어(Flow Control)
송,수신 측 사이의 패킷의 양이나 속도 규제

- 정지-대기(Stop-and-Wait)
수신측의 확인신호(ACK) 후 패킷 전송
한번에 하나씩 전송

- Sliding Window
ACK 없어도 미리 정해진 패킷 수만큼 연속적으로 전송
한번에 여러개 전송
긍정 수신 응답(ACK) 경우 : 윈도우 크기 증가
부정 수신 응답(NAK) 경우 : 윈도우 크기 감소

4) 폭주(혼잡) 제어 (Congestion Control)
네트워크 내의 패킷 수 조절 => Overflow 방지

-- 종류
- 느린 시작(Slow Start) 
윈도우의 크기를 2배씩 증가시켜 초기엔 느리나 점점 빨라짐
임계 값 도달 -> 혼잡 회피 단계로 넘어감

- 혼잡 회피(Congestion Avoidance)
혼잡으로 간주
윈도우의 크기를 1씩 선형 증가
혼잡 예방

5) Dead Lock 방지
무한정 기다리는 형상

6) 교착 상태 발생의 필요 충분 조건
상호 배제(Mutual Exclusion)
점유와 대기(Hold and Wait)
환형 대기(Circular Wait)
비선점(Non-Preemtion)




소프트웨어 개발 보안
1) 관련 기관
- 감리법인
감리 계획
보안 약점 제거 여부 + 조치 결과 확인

- 사업자
관련 기술 수준 및 적용 계획 명시
관련 인력 대상으로 교육 실시
가이드를 참조해 개발 -> 개발 기관

- 한국인터넷진흥원(KISA)
보안 정책 및 가이드 개발
관련 기술지원 + 교육과정, 자격 제도 운영 -> 전문 기관

- 발주기관
보안 계획 수립
보안 사업자 및 감리 법인 선정
보안 준수 여부 점검

- 행정안전부
보안 정책 총괄 -> 정책 기관
관련 법규, 지침, 제도 정비

2) 직무별 보안 활동
PM(Project Manager) : 응용 프로그램에 대한 보안 전략 전달
RS(Requirement Specifier, 요구사항 분석가) : 요구사항 설명 및 정의
Architect : 보안 기술 문제 이해
Designer : 발생할 수 있는 보안 위험에 대해 이해 및 대응
Implementer : 시큐어 코딩 표준 준수  개발 및 문서화
Test Analyst : 요구사항과 구현 결과 반복적 확인
Security Auditor : 전체 단계에서 활동 및 보안 보장




Secure OS
1) 개요
보안기능을 갖춘 운영체제

- 보호 방법
암호적 분리(Cryptographic Separation) : 내부 정보 암호화
논리적 분리(Logical Separation) : 논리 구역 지정 후 벗어나는 행위 제한
시간적 분리(Temporal Separation) : 한번에 하나만 실행되게 하여, 다중 실행시 발생하는 보안 취약점 제거
물리적 분리(Physical Separation) : 사용자 별로 특정 장비만 사용하도록 제한

2) Reference Monitor
접근 통제 수행
- 3가지 특징
격리성(Isolation) : 부정 조작 불가능 
검증 가능성(Verifiability) : 적절히 구현됐다는 것 확인 가능
완전성(Completeness) : 우회 불가능

3) Secure OS의 보안 기능
식별 및 인증
임의적 접근 통제(DAC)
강제적 접근 통제(MAC)
객체 재사용 보호
완벽한 조정
신뢰 경로
감사 및 감사기록 축소




회복 및 병행제어, 데이터 표준화
1) Recovery
- 장애 유형
트랜잭션 장애 : 트랜잭션 내부 오류 -> 프로그램 실행 중지
시스템 장애 : DB 손상 X, 하드웨어 or 소프트웨어 오류 + 교착상태 등에 의해 트랜잭션의 연속적 수행에 장애
미디어 장애 : '저장장치의 손상'으로 'DB의 일부 또는 전부가 물리적'으로 손상

- 회복 관리기(Recovery Management)
DBMS 구성 요소
트랜 잭션 오류 발생 시, 모든 변화를 제거하고 실행전으로 복구
메모리 덤프, 로그로 회복

2) 병행 제어(Concurrency Control)
병행 수행 시, 트랜잭션 간의 상호작용 제어

- 목적
DB 공유 최대화
DB 일관성 유지
시스템 활용도 최대화
응답 시간 최소화

3) 병행 수행의 문제점
갱신 분실(Lost Update) : 갱신 결과의 일부가 없어지는 현상 (덮어쓸 때)
비완료 의존성(Uncommitted Dependency) : 실패한 갱신 결과 참조 (== 임시 갱신) -> 현황 파악 오류 (Dirty Read)
모순성(Inconsistency) : 원하지 않는 자료 이용(== 불일치 분석) => 일관성 결여
연쇄 복귀(Cascading Rollback) : 병행 수행 중이던 트랜잭션들 중 어느 하나에 문제 발생하여 Rollback 하는 경우 -> 다른 트랜잭션도 같이 Rollback 됨 (== 부분취소 불가능 현상)

4) 데이터 표준화 정의
Data의 원칙을 수립하고 적용하는 것

- 종류
단어 : 최소 단위의 단어
도메인 : 컬럼을 성질에 따라 그룹핑
코드 : 이미 정의된 코드값
용어 : 위를 바탕으로 용어 구성

5) 데이터 관리 조직
데이터 관리자(DA), 데이터베이스 관리자(DBA)




네트워크 관련 신기술

- IoT(Internet of Things, 사물 인터넷)
사람과 사물, 사물과 사물간
M2M을 인터넷으로 확장

- M2M(Machine to Machine)
기계와 기계 사이의 통신

- Mobile Computing
휴대용 기기 + 이동하면서 접속 가능

- Cloud Computing
각종 자원을 중앙 컴퓨터에 두고 각 단말기로 접속
ex) 사설 클라우드, 공용 클라우드, 하이브리드 클라우드

- Grid Computing
하나의 컴퓨터처럼 묶어서 분산처리

- Mobile Cloud Computing(MCC)
Moblec + Cloud
여러가지 정보와 자원 공유하는 ICT(Information and Communications Technologies) 기술

- Inter-Cloud Computing
여러 클라우드 서비스나 자원을 연결하는 기술

- Mash Network
대규모 디바이스의 네트워크 생성에 최적화
특수 목적을 위한 새로운 방식의 네트워크 기술

- WI-SUN
저전력 장거리(LPWA; Low-Power Wid Area) 통신 기술

- NDN (Named Data Networking)
콘텐츠 자체의 정보와 라우터 기능만으로 데이터 전송을 수행하는 기술

- 지능형 초 연결망
국가망에 소프트웨어 정의 기술을 적용하는 방법

- NGN (Next Generation Network, 차세대 통신망)
ITU-T에서 개발 중
모든 정보와 서비스를 패킷으로 압축하여 전송

- SDN (Software Defined Networking, 소프트웨어 정의 네트워킹)
네트워크를 컴퓨터처럼 모델링 -> 소프트웨어들로 네트워킹 가상화

- NFC (Near Field Communication, 근거리 무선  통신)
고주파(HF; High Frequency) + 근거리
RFID의 일종
cf) RFID(Radio Frequency Identification) : 근거리 양방향 통신

- UWB (Ultra WideBand)
근거리
대용량 데이터 + 낮은 전력

- PICONET (피코넷)
여러개의 장치 + UWB or 블루투스

- WBAN(Wireless Body Area Netowrk)
Wareable or 몸에 심는 형태
센서나 기기를 무선으로 연결
개인 영역

- GIS(Geographic Information System, 지리 정보 시스템)
'위성'으로 모든 사물의 위치정보 제공

- USN(Ubiquitous Sensor Network)
필요한 모든 곳에 RFID 부착
주변 환경 정보 탐지 -> 네트워크 연결 -> 관리

- SON(Self Organizing Network, 자동 구성 네트워크)
주변 상황에 맞추어 스스로 망을 구성

- Ad-hoc Network
별도의 유선망을 구축할 수 없는 곳에서 구성한 네트워크 (ex. 재난상황)

- Network Slicing
5G 네트워크를 구현하는 중요한 핵심 기술
'하나의 코어' 네트워크를 '다수의 가상' 네트워크로 분리

- BLE(Bluetooth Low Energy)
일반 블루투스와 동일한 대역 사용
대기상태일 때, 절전모드 유지






소프트웨어 관련 신기술
AI(Artificial Intelligence) : 컴퓨터 스스로 인간 지능적 작업을 수행하는 시스템 (언어 : LISP, PROLOG)
Neuralink : 컴퓨터와 인간의 뇌를 연결
Deep Learning : 인공 신경망(ANN; Artificial Neural Network)을 기반으로 하는 기계 학습 기술
Expert System : 전문가가 수행하는 고도의 업무를 위한 프로그램
Blockchain : P2P(Peer-to-Peer), 금융거래 정보를 네트워크 참여자 (Peer)의 디지털 장비에 분산 저장하는 기술 (ex. bitcoin)
DLT(Distributed Ledger Technology, 분산 원장 기술) : P2P, 중앙 관리자 X, 중앙 DB X, 거래발생 시마다 지속적으로 갱신되는 디지털 원장
Hash : 임의의 길이의 입력 데이터를 고정된 길이의 값이나 키로 변환
QKD(Quantum Key Distribution, 양자 암호키 분배) : 비밀키를 분배하여 관리
PET(Privacy Enhancing Technology, 프라이버시 강화 기술) : 개인정보 위험 관리 기술
DRM(Digital Rights Menegement, 디지털 저작권 관리) : 불법 배포 방지
CC(Common Criteria, 공동 평가 기준) : 정보화 제품의 정보보호 기능 + 사용환경 등급 설정
PIA(Privacy Impact Assessment,  개인정보 영향평가 제도) : 국민의 사생활에 미칠 영향을 미리 조사 및 평가
Grayware : 사용자 입장에서는 유용할 수 도 있고, 악의적일 수도 있는 Adware or Trackware(== Spyware)
Mashup : 정보 및 서비스를 이용하여 콘텐츠 조합
RIA(Rich Internet Application) : 신개념의 플래시 웹페이지 제작 기술(HTML보다 우수)
Semantic Web : 컴퓨터가 사람을 대신하여 정보를 읽고 이해하고 가공하여 새로운 정보를 만들 수 있음(차세대 지능형 웹)
Vaporware(증발품) : 계획은 발표되었으나 런칭되지않는 소프트웨어
.... 더있음




데이터베이스 관련 신기술
.... 더있음






Secure SDLC
1) 개요
SDLC + 보안 강화 프로세스
요구사항 분석 : 요구사항 식별
설계 : 보안 설계서 작성
구현 : 시큐어 코딩 준수 + 단위 테스트 => 소스 코드의 안정성 확보
테스트 : 동적 분석 도구 또는 모의 침투 테스트
유지보수 : 보안사고 식별 및 보안 패치 실시

2) 보안 요소
기밀성 : 인가된 사용자만 접근 허용
무결성 : 인가된 사용자만 수정 가능
가용성 : 인가된 사용자는 사용 가능
인증 : 인가된 사용자 확인
부인 방지 : 송수신 증거 제공




스프트웨어 개발 보안 구축
1) 세선 설계시 고려사항
모든 페이지에서 로그아웃 가능 -> 할당된 세션 완전 제거
세션 타임아웃 : 중요도 상 == 2 ~ 5분, 중요도 하 == 15 ~ 30분
이전 세션 종료되지 않으면, 새 새션 생성 불가
pw 변경시 활성화 된 세션을 삭제한 후 재할당

... 더있음



암호 알고리즘
1) 개요
(사진 참고)

2) 암호화(Encryption)
- Encryption : 암호화되지 않은 평문을 암호문으로 변환
-- ex) 개인키 암호 방식(대칭키), 공개키 암호 방식(비대칭키)
- Decryption : 암호문을 원래의 평문으로 변환

3) 장단점
-- 대칭키
- 장점
암호화/복호화 속도가 빠름
알고리즘이 단순함
파일의 크기가 작음
- 단점
관리해야 할 키의 수가 많음

-- 비대칭키
- 장점
키의 분배가 용이
관리해야 할 키의 수가 적음
- 단점
속도가 느림
알고리즘 복잡
파일 크기 큼

5) 양방향 알고리즘 종류
- DES
개인키 암호화 알고리즘
블록 크기 : 64비트
키 길이 : 56비트

- AES
개인키 암호화 알고리즘
블록 크기 : 128비트
키 길이 : 128, 192, 256

- SEED
블록 암호화 알고리즘
블록 크기 : 128비트
키 길이 : 128, 192, 256

- ARIA
블록 암호화 알고리즘
블록 크기 : 128비트
키 길이 : 128, 192, 256

- RSA 
공개키 암호화 알고리즘
소인수 분해 문제 이용





서비스 공격 유형
- DOS(Denial of Service)
서버의 자원을 고갈시킬 목적

- Ping of Death
Ping 전송 시, 패킷의 크기를 허용 범위 이상으로 전송 -> 네트워크 마비

- SMURFING
엄청난 양의 데이터를 한 사이트에 집중적으로 보냄 -> 네트워크 불능
IP 또는 ICMP 특성 악용
네트워크 내의 모든 컴퓨터로 전송됨

- SYN Flooding
3-way-handshake(TCP에서 신뢰성 있는 연결을 위해 쓰는 기법) 의도적으로 중단
서버가 대기 상태에 놓이게 하는 방법

- TearDrop
Fragment Offset(패킷이 분할되어 전송될 때, 재조립 하기위한 분할 순서) 전송
-> 재조립시 오류 -> 과부화 => 시스템 다운

- LAND Attack
송신 IP와 수신 IP 모두 공격 대상의 IP로 변경
공격 자신에게 전송 => 자신에 대해 무한히 응답

- DDoS(Distributed Denial of Services)
분산된 공격 지점 -> 한곳의 서버 공격 (분산 서비스 공격)
종류 : Tribe Flood Network, Stacheldraht, Trinoo

1) 네트워크 침해 공격 관련 용어
- Smishing : 문자 메시지를 이용
- Spear Phishing : 사회 공학의 한 기법, 신뢰 바탕으로 특정 대상 선정 후 범행
- 지능형 지속 위협(APT; Advanced Persistent Threats) : 조직 네트워크 침투 (이메일, USB, P2P)
- 무차별 대입 공격(Brute Force Attack) : 적용 가능한 모든 값을 공격하여 암호키를 얻는 범행
- Qshing : QR코드 + Fishing의 신조어
- SQL 삽입 공격(SQL Injection) : 무차별적으로 웹사이트 공격 중, 취약한 사이트의 DB 데이터 조작
- 크로스 사이트 스크립팅(XSS; Cross-Site Scripting) : 특정 게시물이나 링크 클릭시 악성 스크립트 실행

2) 정보 보안 침해 공격 관련 용어
Zombie PC : 타 프로그램이나 컴퓨터를 조종하도록 만들어진 컴퓨터 (악성코드 감염상태)
C&C 서버 : 좀비 PC에 명령을 내리고 악성코드를 제어하기 위한 용도로 사용하는 서버
Botnet : 악성 코드에 감염된 컴퓨터들이 네트워크로 연결된 상태
Worm : 네트워크로 자신을 복제 -> 시스템 부하 -> 다운
Zero Day Attack : 발견된 취약점이 발견된 후, 공표 전에 공격
Key Logger Attack : 키보드 움직임을 탐지해 개인정보를 빼가는 해킹 공격
Ransomeware : 사용자의 파일을 암호화해 사용자가 열지 못하게 하는 공격, 복호화를 조건으로 돈 요구
Back Door : 개발자가 액세스 편의를 위해 시스템 보안을 제거하여 만들어 놓은 비밀 통로, 범죄에 악용되기도 함
Trojan Horse : 정상적인 프로그램으로 위장 -> 프로그램 동작 시 활성화 (자기복제 기능 X)



